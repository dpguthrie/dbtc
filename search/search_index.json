{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"An unaffiliated python interface for dbt Cloud APIs Documentation : https://dbtc.dpguthrie.com Source Code : https://github.com/dpguthrie/dbtc V2 Docs : https://docs.getdbt.com/dbt-cloud/api-v2 V3 Docs (Unofficial) : https://documenter.getpostman.com/view/14183654/UVsSNiXC V4 Docs : https://docs.getdbt.com/dbt-cloud/api-v4 Overview \u00b6 dbtc is an unaffiliated python interface to various dbt Cloud API endpoints. This library acts as a convenient interface to two different APIs that dbt Cloud offers: Cloud API: This is a REST API that exposes endpoints that allow users to programatically create, read, update, and delete resources within their dbt Cloud Account. Metadata API: This is a GraphQL API that exposes metadata generated from a job run within dbt Cloud. Requirements \u00b6 Python 3.7+ Requests - The elegant and simple HTTP library for Python, built for human beings. sgqlc - Simple GraphQL Client Typer - Library for building CLI applications Installation (Coming Soon) \u00b6 pip install dbtc Basic Usage \u00b6 Python \u00b6 The interface to both APIs are located in the dbtCloudClient class. The example below shows how you use the cloud property on an instance of the dbtCloudClient class to access methods that allow for programmatic control over dbt Cloud resources. from dbtc import dbtCloudClient client = dbtCloudClient () account = client . cloud . get_account_by_name ( 'My Account' ) project = client . cloud . get_project_by_name ( account [ 'id' ], 'My Project' ) run_id = client . cloud . trigger_job_and_poll () License \u00b6 This project is licensed under the terms of the MIT license.","title":"Home"},{"location":"#overview","text":"dbtc is an unaffiliated python interface to various dbt Cloud API endpoints. This library acts as a convenient interface to two different APIs that dbt Cloud offers: Cloud API: This is a REST API that exposes endpoints that allow users to programatically create, read, update, and delete resources within their dbt Cloud Account. Metadata API: This is a GraphQL API that exposes metadata generated from a job run within dbt Cloud.","title":"Overview"},{"location":"#requirements","text":"Python 3.7+ Requests - The elegant and simple HTTP library for Python, built for human beings. sgqlc - Simple GraphQL Client Typer - Library for building CLI applications","title":"Requirements"},{"location":"#installation-coming-soon","text":"pip install dbtc","title":"Installation (Coming Soon)"},{"location":"#basic-usage","text":"","title":"Basic Usage"},{"location":"#python","text":"The interface to both APIs are located in the dbtCloudClient class. The example below shows how you use the cloud property on an instance of the dbtCloudClient class to access methods that allow for programmatic control over dbt Cloud resources. from dbtc import dbtCloudClient client = dbtCloudClient () account = client . cloud . get_account_by_name ( 'My Account' ) project = client . cloud . get_project_by_name ( account [ 'id' ], 'My Project' ) run_id = client . cloud . trigger_job_and_poll ()","title":"Python"},{"location":"#license","text":"This project is licensed under the terms of the MIT license.","title":"License"}]}